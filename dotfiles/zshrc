###
zsh
###

export ZSH="$HOME/.oh-my-zsh"
ZSH_THEME="robbyrussell"
plugins=(git)
source $ZSH/oh-my-zsh.sh

. "$HOME/.local/bin/env"

# Set up fzf key bindings and fuzzy completion
source <(fzf --zsh)

##########
# Aliases
#########

# python
alias python='python3'

# Edit configs
alias ez='nvim ~/.zsh_profile'
alias sz='source ~/.zshrc'
alias rd='cd ~/personal/dev && make run'
alias ed='nvim ~/personal/dev'
alias n='nvim ~/personal/notes.md'

# Git
alias s='git status'
alias gaa='git add -A'
alias gc='git commit'
alias com='git checkout main'
alias gd='git diff'
alias gdc='git diff --cached'
# [c]heck [o]ut
alias co='git checkout'
# [f]uzzy check[o]ut
fo() {
  git branch --no-color --sort=-committerdate --format='%(refname:short)' | fzf --header 'git checkout' | xargs git checkout
}
# [p]ull request check[o]ut
po() {
  gh pr list --author "@me" | fzf --header 'checkout PR' | awk '{print $(NF-5)}' | xargs git checkout
}
alias up='git push'
alias upf='git push --force'
alias pu='git pull'
alias pur='git pull --rebase'
alias fe='git fetch'
alias re='git rebase'
alias lr='git log -30'

# jj
# Most of that stuff is taken from here: https://x.com/dimfeld/status/1926863685487559038
# Workflow:
#   jj commit
#   jjub
#   jj git push

# Get the closest ancestor bookmark
alias jjpb="jj log -r 'latest(heads(ancestors(@) & bookmarks()), 1)' --limit 1 --no-graph --ignore-working-copy -T bookmarks | tr -d '*'"

# jj update branch
jj-update-branch() {
  REV=${1:-@}
  if [ $# -gt 0 ]; then
    shift
  fi
  jj bookmark move $(jjpb) --to "$REV" "$@"
}

alias jjub=jj-update-branch
alias jn='jj new'
alias js='jj status'
alias jf='jj git fetch'
alias jp='jj git push'
alias jd='jj diff'
alias jl="jj log"
alias jjlt="jj log -r 'latest(ancestors(trunk()), 10)'"
# https://steveklabnik.github.io/jujutsu-tutorial/branching-merging-and-conflicts/revsets.html
# alias jji="jj log -r '@ | ancestors(remote_bookmarks().., 2) | trunk()'"

# ceedee dot dot dot
alias -g ...='../..'
alias -g ....='../../..'
alias -g .....='../../../..'

##########
# FUNCTIONS
##########

mkdircd() {
  mkdir -p $1 && cd $1
}
